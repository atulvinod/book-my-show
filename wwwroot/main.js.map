{"version":3,"sources":["./src/app/admin/admin.authguard.ts","./src/app/models/login.model.ts","./src/app/admin/admin-show-details/admin-details.component.ts","./src/app/admin/admin-show-details/admin-details.component.html","./src/app/admin/admin-dashboard/admin-dashboard.component.ts","./src/app/admin/admin-dashboard/admin-dashboard.component.html","./src/app/bookmyshow/bookmyshow.routing.ts","./src/app/user/user.component.ts","./src/app/user/user.component.html","./src/app/user/user.module.ts","./src/app/bookmyshow/register/register.component.ts","./src/app/bookmyshow/register/register.component.html","./src/app/bookmyshow/showdetails/showdetails.component.ts","./src/app/bookmyshow/showdetails/showdetails.component.html","./src/environments/environment.ts","./src/app/user/reservation-card/reservation-card.component.ts","./src/app/user/reservation-card/reservation-card.component.html","./src/app/user/dashboard/user-dashboard.component.ts","./src/app/user/dashboard/user-dashboard.component.html","./src/app/bookmyshow/login/login.component.ts","./src/app/bookmyshow/login/login.component.html","./src/app/bookmyshow/homepage/homepage.component.ts","./src/app/bookmyshow/homepage/homepage.component.html","./src/app/bookmyshow/bookmyshow.component.ts","./src/app/bookmyshow/bookmyshow.component.html","./src/app/bookmyshow/show-details-card/show-details-card.component.ts","./src/app/bookmyshow/show-details-card/show-details-card.component.html","./src/app/bookmyshow/seat-selector/seat-selector.component.ts","./src/app/bookmyshow/seat-selector/seat-selector.component.html","./src/app/services/shows.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/models/show.model.ts","./src/app/services/appstate.service.ts","./src/app/admin/admin.component.ts","./src/app/admin/admin.component.html","./src/app/user/user.routing.ts","./src/app/app.module.ts","./src/app/admin/admin.routing.ts","./src/app/shared.module.ts","./src/app/services/auth-interceptor.service.ts","./src/app/bookmyshow/bookmyshow.module.ts","./src/app/admin/admin.module.ts","./src/app/navbar/navbar.component.ts","./src/app/navbar/navbar.component.html","./src/app/models/register-user.model.ts","./src/app/services/auth.service.ts","./src/app/models/new-reservation.model.ts","./src/app/services/reservation.service.ts","./src/app/bookmyshow/bookmyshow.authguard.ts","./src/app/models/authdetails.model.ts","./src/app/app-routing.module.ts","./src/app/admin/admin-create-show/admin-create-show.component.ts","./src/app/admin/admin-create-show/admin-create-show.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { AppStateService } from '../services/appstate.service';\r\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\r\nimport { isNgTemplate } from \"@angular/compiler\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n    providedIn: \"root\"\r\n})\r\nexport class AdminAuthGuard implements CanActivate {\r\n\r\n    constructor(public appState: AppStateService, public router: Router) { }\r\n\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean | UrlTree | Observable<boolean | UrlTree> | Promise<boolean | UrlTree> {\r\n        \r\n        if (this.appState.getLoginState() == true && this.appState.getAuthDetails().userRole == \"Admin\") {\r\n            return true;\r\n        } else {\r\n            return this.router.navigate([\"/login\"]);\r\n        }\r\n    }\r\n\r\n}","export class LoginModel {\r\n\r\n  public email: string;\r\n  public password: string;\r\n\r\n  constructor(args: {}) {\r\n    this.email = args[\"email\"];\r\n    this.password = args[\"password\"];\r\n  }\r\n}","import { VenueModel } from 'src/app/models/venue.model';\r\nimport { ShowModel } from 'src/app/models/show.model';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { ShowsService } from './../../services/shows.service';\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { forkJoin } from 'rxjs';\r\n\r\n@Component({\r\n    selector: \"app-admin-show-details\",\r\n    templateUrl: \"./admin-details.component.html\"\r\n})\r\nexport class AdminShowDetailsComponent implements OnInit {\r\n\r\n    showDetails: ShowModel;\r\n    venueDetails: VenueModel[];\r\n\r\n    constructor(public showService: ShowsService, public activatedRoute: ActivatedRoute) { }\r\n\r\n    ngOnInit() {\r\n        this.getDetails()\r\n    }\r\n\r\n    getDetails() {\r\n        let id = this.activatedRoute.snapshot.params[\"id\"];\r\n        forkJoin([this.showService.getShow(id), this.showService.getVenuesForShow(id)]).subscribe(result => {\r\n            this.showDetails = result[0];\r\n            this.venueDetails = result[1];\r\n        })\r\n    }\r\n}","<div class=\"container mt-3\">\r\n  <h1>View Show details</h1>\r\n  <hr />\r\n  <h3>{{ showDetails.name }}</h3>\r\n  <div class=\"row mt-3\">\r\n    <div class=\"col-3\">\r\n      <img src=\"{{ showDetails.posterImgPath }}\" alt=\"\" />\r\n    </div>\r\n    <div class=\"col-9\">\r\n      <div\r\n        class=\"row\"\r\n        *ngFor=\"let i of venueDetails\"\r\n        class=\"admin-show-row mt-2\"\r\n      >\r\n        <div class=\"col\">\r\n          <h4 class=\"mt-2\">Date and time</h4>\r\n          <span>{{ i.showDateTime}}</span>\r\n          \r\n          <h4 class=\"mt-2\">Location</h4>\r\n          <p>{{ i.address }}</p>\r\n\r\n          <h4 class=\"mt-2\">Price</h4>\r\n          <span>\r\n            {{ i.showPrice | currency: \"INR\":true }}\r\n          </span>\r\n\r\n          <h4 class=\"mt-2\">Available Seats</h4>\r\n          <span> {{ i.availableSeatCount }}</span>\r\n\r\n          <h4>Total Seats</h4>\r\n          <span>{{ i.totalSeatCount }}</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { ShowModel } from './../../models/show.model';\r\nimport { ShowsService } from './../../services/shows.service';\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n    selector: \"app-admin-dashboard\",\r\n    templateUrl: \"./admin-dashboard.component.html\"\r\n})\r\nexport class AdminDashboardComponent implements OnInit {\r\n\r\n    allShows: ShowModel[] = []\r\n\r\n    constructor(public showService: ShowsService, public router: Router) { }\r\n\r\n    ngOnInit() {\r\n        this.getShows();\r\n    }\r\n\r\n    getShows() {\r\n        this.showService.getAllShows().subscribe(value => {\r\n            this.allShows = value;\r\n        });\r\n    }\r\n\r\n    showDetails(showId) {\r\n        this.router.navigate([`admin/details/${showId}`]);\r\n    }\r\n}","<div class=\"container mt-3\">\r\n    <div class=\"pb-2 d-flex justify-content-between\">\r\n        <h1>Admin Dashboard</h1><a href=\"/admin/create\" [routerLink]=\"['/admin/create']\" class=\"btn btn-success float-right align-self-center\">Create Show</a>\r\n\r\n    </div>\r\n    <hr>\r\n    <div  *ngFor=\"let i of allShows\" class=\"admin-show-row row mt-2\">\r\n        <div class=\"col-4\">\r\n            <img src=\"{{i.posterImgPath}}\" alt=\"\">\r\n        </div>\r\n        <div class=\"col\">\r\n            <h5>{{i.name}}</h5>\r\n            <hr>\r\n            <p>\r\n                {{i.description!= null && i.description.trim().length!=0 ?  i.description:\"--No Discription--\"}}\r\n            </p>\r\n            <button class=\"btn btn-primary\" (click)=\"showDetails(i.id)\">View More</button>\r\n        </div>\r\n    </div>\r\n    <div class=\"h-100 d-flex justify-content-center align-items-center no-show-banner\" *ngIf = \"allShows.length == 0\">\r\n        <h3 class=\"font-italic font-weight-light\">-- No shows to display --</h3>\r\n    </div>\r\n</div>","import { SeatSelectorComponent } from './seat-selector/seat-selector.component';\r\nimport { ShowDetailsComponent } from './showdetails/showdetails.component';\r\nimport { BookMyShowAuthGuard } from './bookmyshow.authguard';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { BookMyShowComponent } from './bookmyshow.component';\r\nimport { NgModule } from \"@angular/core\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\nimport { HomepageComponent } from './homepage/homepage.component';\r\nimport { pathToFileURL } from 'url';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: \"\",\r\n        component: BookMyShowComponent,\r\n        children: [\r\n            {\r\n                path: \"\",\r\n                component: HomepageComponent\r\n            },\r\n            {\r\n                path: \"login\",\r\n                component: LoginComponent\r\n            },\r\n            {\r\n                path: \"register\",\r\n                component: RegisterComponent,\r\n            },\r\n            {\r\n                path: \"details/:id\",\r\n                component: ShowDetailsComponent\r\n            }, \r\n            {\r\n                path:\"selectseat\",\r\n                component:SeatSelectorComponent,\r\n                canActivate :[BookMyShowAuthGuard]\r\n            }\r\n\r\n        ]\r\n    },\r\n    {\r\n        path: \"*\",\r\n        redirectTo: \"\"\r\n    }\r\n]\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class MainRouting { }","import { Component } from \"@angular/core\";\r\n\r\n@Component({\r\n    templateUrl: \"./user.component.html\",\r\n    selector: \"app-user\"\r\n})\r\nexport class UserComponent {\r\n    constructor() { }\r\n}","<router-outlet></router-outlet>","import { UserComponent } from './user.component';\r\nimport { UserDashboardComponent } from './dashboard/user-dashboard.component';\r\nimport { BookMyShowAuthGuard } from '../bookmyshow/bookmyshow.authguard';\r\nimport { UserRoutingModule } from './user.routing';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgModule } from \"@angular/core\";\r\nimport { ReservationCard } from './reservation-card/reservation-card.component';\r\nimport { SharedModule } from '../shared.module';\r\n\r\n@NgModule({\r\n    declarations: [UserDashboardComponent, UserComponent,ReservationCard],\r\n    exports: [UserDashboardComponent, UserComponent,ReservationCard],\r\n    imports: [\r\n        CommonModule,\r\n        UserRoutingModule,\r\n        SharedModule\r\n    ],\r\n    providers: [BookMyShowAuthGuard],\r\n})\r\nexport class UserModule {\r\n\r\n}","import { AppStateService } from './../../services/appstate.service';\r\nimport { NavbarComponent } from './../../navbar/navbar.component';\r\nimport { AuthService } from './../../services/auth.service';\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { FormControl, FormGroup, Validators } from \"@angular/forms\";\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n    selector: \"app-register\",\r\n    templateUrl: \"./register.component.html\"\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n\r\n    registerForm: FormGroup;\r\n    showError: Boolean = false;\r\n    errorMessage: string;\r\n\r\n    constructor(public authService: AuthService, public router: Router, public appStateService: AppStateService) {\r\n        this.registerForm = new FormGroup({\r\n            username: new FormControl(null, [Validators.required]),\r\n            email: new FormControl(null, [Validators.email, Validators.required]),\r\n            password: new FormControl(null, [Validators.required, Validators.minLength(6)]),\r\n            confirmPassword: new FormControl(null, [Validators.required, Validators.minLength(6)])\r\n        })\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.registerForm.get(\"password\").valueChanges.subscribe(value => {\r\n            if (!(value.length >= 6)) {\r\n                this.showError = true;\r\n                this.errorMessage = \"Password is too short\";\r\n                return;\r\n            } else {\r\n                this.showError = false;\r\n            }\r\n        });\r\n        this.registerForm.get(\"confirmPassword\").valueChanges.subscribe(value => {\r\n            if (value != this.registerForm.get(\"password\").value) {\r\n                this.showError = true;\r\n                this.errorMessage = \"Password and confirm password doesnt match\";\r\n            } else {\r\n                this.showError = false;\r\n            }\r\n        })\r\n    }\r\n\r\n    submitHandler() {\r\n        let { username, email, password, confirmPassword } = this.registerForm.value;\r\n\r\n        if (password != confirmPassword) {\r\n            this.showError = true;\r\n            this.errorMessage = \"Password and Confirm password dont match\"\r\n            return;\r\n        }\r\n\r\n        this.authService.registerUser(username, email, password).subscribe(value => {\r\n            this.appStateService.setLoginState(value, value.userRole);\r\n            this.router.navigate([\"/\"]);\r\n        },\r\n            error => {\r\n                if (error.error instanceof ErrorEvent) {\r\n                    console.error('An error occurred:', error.error.message);\r\n                    this.errorMessage = error.error.message;\r\n                } else {\r\n                    this.showError = true;\r\n                    this.errorMessage = error.error.message;\r\n                }\r\n            });\r\n    }\r\n}","<div class=\"container mt-3\">\r\n  <h1>Register</h1>\r\n  <hr />\r\n  <div class=\"row\">\r\n    <div class=\"col-4\">\r\n      <form action=\"\" [formGroup]=\"registerForm\" (submit)=\"submitHandler()\">\r\n        <div class=\"form-group\">\r\n          <label for=\"\">Username</label>\r\n          <input type=\"text\" class=\"form-control\" formControlName=\"username\"/>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"\">Email</label>\r\n          <input type=\"email\" name=\"\" id=\"\" class=\"form-control\" formControlName=\"email\" />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"\">Password</label\r\n          ><input type=\"password\" name=\"\" id=\"\" class=\"form-control\" \r\n          formControlName=\"password\"/>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"\">Confirm Password</label\r\n          ><input type=\"password\" name=\"\" id=\"\" class=\"form-control\" \r\n          formControlName=\"confirmPassword\"/>\r\n        </div>\r\n        <span class=\"text-danger d-block\" *ngIf=\"showError\">{{errorMessage}}</span>\r\n        <input type=\"submit\" value=\"Register\" class=\"btn btn-primary mt-3\" \r\n        [disabled]=\"this.registerForm.invalid==true\"/>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { forkJoin } from 'rxjs';\r\nimport { AppStateService } from './../../services/appstate.service';\r\nimport { VenueModel } from './../../models/venue.model';\r\nimport { ShowsService } from './../../services/shows.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { ShowModel } from \"src/app/models/show.model\";\r\n\r\n@Component({\r\n    selector: \"app-showdetails\",\r\n    templateUrl: \"./showdetails.component.html\"\r\n})\r\nexport class ShowDetailsComponent implements OnInit {\r\n\r\n    showDetails: ShowModel;\r\n    venueDetails: VenueModel[] = []\r\n\r\n    constructor(public router: Router, public activatedRoute: ActivatedRoute, public showsService: ShowsService, public appState: AppStateService) { }\r\n\r\n    ngOnInit() {\r\n        console.log(this.activatedRoute.snapshot.params[\"id\"]);\r\n        this.getData();\r\n    }\r\n\r\n    getData() {\r\n        let id = this.activatedRoute.snapshot.params[\"id\"];\r\n        forkJoin([this.showsService.getShow(id), this.showsService.getVenuesForShow(id)]).subscribe(result => {\r\n            this.showDetails = result[0];\r\n            this.venueDetails = result[1];\r\n        })\r\n    }\r\n\r\n    chooseVenue(event) {\r\n        console.log(event)\r\n        this.appState.setShowAndVenue(this.showDetails, event);\r\n        this.router.navigate([\"selectseat\"])\r\n    }\r\n}","<div class=\"container mt-3\">\r\n  <div class=\"row\">\r\n    <div class=\"col-3\">\r\n      <div class=\"card\">\r\n        <img\r\n          src=\"{{ showDetails.posterImgPath }}\"\r\n          class=\"card-img-top poster-img\"\r\n          alt=\"...\"\r\n        />\r\n      </div>\r\n    </div>\r\n    <div class=\"col\">\r\n      <h2>{{ showDetails.name }}</h2>\r\n      <hr />\r\n      <p>\r\n        {{\r\n          showDetails.description != null &&\r\n          showDetails.description.trim().length != 0\r\n            ? showDetails.description\r\n            : \"--No Discription--\"\r\n        }}\r\n      </p>\r\n    </div>\r\n  </div>\r\n  <hr class=\"mt-3\" />\r\n  <div class=\"row mt-2\">\r\n    <div class=\"col-12\"><h3>Show venues..</h3></div>\r\n    <div class=\"col-12 mt-2\"></div>\r\n\r\n    <div class=\"row mt-3 col-12\" *ngFor=\"let i of venueDetails\">\r\n      <div class=\"col-8\">\r\n        <span>Location</span>\r\n        <h5>{{ i.address }}</h5>\r\n        <table class=\"table\">\r\n          <tbody>\r\n            <tr>\r\n              <td>Total Seats</td>\r\n              <td>\r\n                {{ i.totalSeatCount }}\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>Available seats</td>\r\n              <td>\r\n                {{ i.availableSeatCount }}\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>Date and Time</td>\r\n              <td>\r\n                {{ i.showDateTime }}\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <div class=\"col-4 d-flex justify-content-start flex-column\">\r\n        <div>\r\n          <h4>Price</h4>\r\n          <h1>{{ i.showPrice | currency: \"INR\":true }}</h1>\r\n        </div>\r\n        <div *ngIf=\"i.availableSeatCount != 0\">\r\n          <button\r\n            class=\"btn btn-success w-75 align-self-center mt-4\"\r\n            *ngIf=\"appState.getLoginState() == true\"\r\n            (click)=\"chooseVenue(i)\"\r\n          >\r\n            Book This Show!\r\n          </button>\r\n        </div>\r\n        <div *ngIf=\"i.availableSeatCount == 0\">\r\n          <h3 class=\"text-danger\">Sold out</h3>\r\n        </div>\r\n        <a\r\n          href=\"/login\"\r\n          [routerLink]=\"['/login']\"\r\n          class=\"btn btn-primary w-75 align-self-center mt-4\"\r\n          *ngIf=\"appState.getLoginState() == false\"\r\n          >Login to Book this show</a\r\n        >\r\n      </div>\r\n    </div>\r\n\r\n    <div *ngIf=\"venueDetails == null || venueDetails.length == 0\">\r\n      <h4 class=\"font-italic font-weight-light\">-- No venues available --</h4>\r\n    </div>\r\n  </div>\r\n</div>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { ShowsService } from './../../services/shows.service';\r\nimport { VenueModel } from './../../models/venue.model';\r\nimport { ShowModel } from './../../models/show.model';\r\nimport { ReservationService } from './../../services/reservation.service';\r\nimport { UserReservationModel } from './../../models/user-reservation.model';\r\nimport { Component, Input, OnInit } from \"@angular/core\";\r\nimport {forkJoin} from 'rxjs';\r\n\r\n@Component({\r\n    selector: \"app-user-reservation\",\r\n    templateUrl: \"./reservation-card.component.html\"\r\n})\r\nexport class ReservationCard implements OnInit {\r\n    \r\n    @Input() userReservation: UserReservationModel;\r\n    showDetails:ShowModel;\r\n    venueDetails:VenueModel;\r\n\r\n    constructor(public reservationService: ReservationService,public showsService:ShowsService) {}\r\n\r\n    ngOnInit() {\r\n        this.fetchShowAndVenue();\r\n    }\r\n    \r\n    cancelReservation(reservationId) {\r\n        this.reservationService.cancelReservation(reservationId).subscribe(value => {\r\n            this.userReservation.reservations.map((e) => {\r\n                if (e.id == reservationId) {\r\n                    e.reservationCancelled = true;\r\n                }\r\n                return e;\r\n            })\r\n        });\r\n    }\r\n\r\n    fetchShowAndVenue(){\r\n        forkJoin([this.showsService.getShow(this.userReservation.showId),this.showsService.getVenue(this.userReservation.venueId)]).subscribe(values=>{\r\n            this.showDetails = values[0];\r\n            this.venueDetails = values[1]\r\n        })\r\n    }\r\n}","<div class=\"row mt-3\">\r\n  <div class=\"offset-2 col-8 reservation-card\">\r\n    <div class=\"row\">\r\n        <div class=\"col-4\">\r\n            <img src=\"{{showDetails?.posterImgPath}}\" alt=\"\">\r\n        </div>\r\n        <div class=\"col\">\r\n            <h2>{{showDetails?.name}}</h2>\r\n            <p>\r\n                {{showDetails?.description}}\r\n            </p>\r\n        </div>\r\n    </div>\r\n\r\n    <hr>\r\n    <div class=\"mt-2\">\r\n      <h2>Location</h2>\r\n      <p>\r\n        {{ venueDetails?.address }}\r\n      </p>\r\n    </div>\r\n    <div class=\"mt-2\">\r\n        <h2>Date and time</h2>\r\n        <p>\r\n            {{venueDetails?.showDateTime}}\r\n        </p>\r\n    </div>\r\n    <hr>\r\n    <table class=\"table text-center mt-2\">\r\n      <thead class=\"thead-dark\">\r\n        <tr>\r\n          <th>Seat Number</th>\r\n\r\n          <th>Action</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr *ngFor=\"let i of userReservation.reservations\">\r\n          <td class=\"seat-number\">\r\n            {{ i.seatNumber }}\r\n          </td>\r\n          <td>\r\n\r\n            <button class=\"btn btn-danger\" *ngIf=\"i.reservationCancelled==false\" (click)=\"cancelReservation(i.id)\">Cancel</button>\r\n            <span class=\"text-danger\" *ngIf=\"i.reservationCancelled\">-Cancelled-</span>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</div>\r\n","import { ReservationService } from './../../services/reservation.service';\r\nimport { UserReservationModel } from '../../models/user-reservation.model';\r\nimport { AuthDetails } from './../../models/authdetails.model';\r\nimport { AppStateService } from './../../services/appstate.service';\r\nimport { Component, OnInit } from \"@angular/core\";\r\n\r\n@Component({\r\n    selector: \"app-user-dashboard\",\r\n    templateUrl: \"./user-dashboard.component.html\"\r\n})\r\nexport class UserDashboardComponent implements OnInit {\r\n\r\n    authDetails: AuthDetails\r\n    reservations: UserReservationModel[] = []\r\n\r\n    constructor(public appState: AppStateService, public reservationService: ReservationService) { }\r\n\r\n    ngOnInit() {\r\n        this.authDetails = this.appState.getAuthDetails();\r\n        this.getReservations();\r\n    }\r\n\r\n    getReservations() {\r\n        this.reservationService.getUserReservations().subscribe(value => {\r\n            this.reservations = value;\r\n            console.log(this.reservations);\r\n\r\n        });\r\n    }\r\n}","<div class=\"container mt-3\">\r\n    <h1>Hello {{this.authDetails.userName}}!</h1>\r\n    <hr>\r\n    <h3>Your reservations</h3>\r\n    <div class=\"mt-2\">\r\n        <app-user-reservation [userReservation]=\"i\" *ngFor=\"let i of reservations\"></app-user-reservation>\r\n    </div>\r\n    <div class=\"h-100 d-flex justify-content-center align-items-center no-content-banner\" *ngIf = \"reservations.length == 0\">\r\n        <h3 class=\"font-italic font-weight-light\">-- No Reservations --</h3>\r\n    </div>\r\n</div>","import { SocialLoginModel } from './../../models/social-login.model';\r\nimport { AppStateService } from './../../services/appstate.service';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from './../../services/auth.service';\r\nimport { Component } from \"@angular/core\";\r\nimport { FormControl, FormGroup, Validators } from \"@angular/forms\";\r\nimport { FacebookLoginProvider, SocialAuthService } from \"angularx-social-login\";\r\nimport { GoogleLoginProvider } from \"angularx-social-login\";\r\n\r\n\r\n@Component({\r\n    selector: \"app-login\",\r\n    templateUrl: \"./login.component.html\"\r\n})\r\nexport class LoginComponent {\r\n\r\n    loginForm: FormGroup;\r\n    errorMessage: string;\r\n    showError: boolean = false;\r\n\r\n    constructor(public authService: AuthService, public router: Router, public appState: AppStateService, public socialAuthService: SocialAuthService) { }\r\n\r\n    ngOnInit() {\r\n        this.loginForm = new FormGroup({\r\n            emailId: new FormControl(null, [Validators.required, Validators.email]),\r\n            password: new FormControl(null, [Validators.required])\r\n        })\r\n    }\r\n\r\n    submitHandler() {\r\n        let { emailId, password } = this.loginForm.value;\r\n\r\n        this.authService.attemptLogin(emailId, password).subscribe(value => {\r\n            this.appState.setLoginState(value, value.userRole);\r\n            this.router.navigate([\"/\"]);\r\n        },\r\n            error => {\r\n                if (error.error instanceof ErrorEvent) {\r\n                    console.error('An error occurred:', error.error.message);\r\n                } else {\r\n                    this.showError = true;\r\n                    this.errorMessage = error.error.message;\r\n                }\r\n            });\r\n    }\r\n\r\n    loginWithGoogle() {\r\n        this.socialAuthService.signIn(GoogleLoginProvider.PROVIDER_ID);\r\n\r\n        this.socialAuthService.authState.subscribe((user: SocialLoginModel) => {\r\n            console.log(user);\r\n            this.authService.validateGoogleAuth(user).subscribe(authDetails => {\r\n                console.log(authDetails);\r\n                this.appState.setLoginState(authDetails, authDetails.userRole);\r\n                this.router.navigate(['/']);\r\n            })\r\n        })\r\n    }\r\n\r\n    loginWithFacebook(){\r\n        this.socialAuthService.signIn(FacebookLoginProvider.PROVIDER_ID).catch(err=>{\r\n            console.error(err);\r\n        });\r\n        this.socialAuthService.authState.subscribe((user: SocialLoginModel) => {\r\n            console.log(user);\r\n        })\r\n    }\r\n}\r\n\r\n","<div class=\"container mt-3\">\r\n  <h1>Login</h1>\r\n  <hr />\r\n  <div class=\"row\">\r\n    <div class=\"col-4\">\r\n      <form action=\"\" [formGroup]=\"loginForm\" (submit)=\"submitHandler()\">\r\n        <div class=\"form-group\">\r\n          <label for=\"\">Email Id</label>\r\n          <input type=\"email\" class=\"form-control\" formControlName=\"emailId\" />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"\">Password</label>\r\n          <input\r\n            type=\"password\"\r\n            class=\"form-control\"\r\n            formControlName=\"password\"\r\n          />\r\n        </div>\r\n        <span class=\"d-block text-danger\" *ngIf=\"showError\">{{\r\n          errorMessage\r\n        }}</span>\r\n        <input\r\n          type=\"submit\"\r\n          value=\"Login\"\r\n          class=\"btn btn-success mt-2\"\r\n          [disabled]=\"this.loginForm.invalid == true\"\r\n        />\r\n      </form>\r\n      <div class=\"d-flex mt-1 align-items-center\">\r\n        <span class=\"grey-line\"> </span>\r\n        <span class=\"font-italic font-weight-light text-info\"> Or </span>\r\n        <span class=\"grey-line\"> </span>\r\n      </div>\r\n      <div class=\"mt-2\">\r\n        <button class=\"btn btn-primary w-100\" (click)=\"loginWithGoogle()\">\r\n          Login with Google\r\n        </button>\r\n      </div>\r\n      <div class=\"mt-2\">\r\n        <button class=\"btn btn-primary w-100\" (click)=\"loginWithFacebook()\">Login with Facebook</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { ShowModel } from './../../models/show.model';\r\nimport { ShowsService } from './../../services/shows.service';\r\nimport { Component, OnInit } from \"@angular/core\";\r\n@Component({\r\n    selector: 'app-homepage',\r\n    templateUrl: \"./homepage.component.html\"\r\n})\r\nexport class HomepageComponent implements OnInit {\r\n\r\n    showList: ShowModel[] = [];\r\n\r\n    constructor(public showService: ShowsService) { }\r\n\r\n    ngOnInit(): void {\r\n        this.fetchShows();\r\n    }\r\n\r\n    fetchShows() {\r\n        this.showService.getAllShows().subscribe(value => {\r\n            this.showList = value;\r\n        });\r\n    }\r\n\r\n}","<div class=\"container mt-3\">\r\n    <h1>All Shows..</h1>\r\n    <hr>\r\n    <div class=\"row\">\r\n        <app-showcard [showData]=\"i\" *ngFor=\"let i of showList\" class=\"col-3 mt-2\"></app-showcard>\r\n    </div>\r\n    <div class=\"h-100 d-flex justify-content-center align-items-center no-content-banner\" *ngIf = \"showList.length == 0\">\r\n        <h3 class=\"font-italic font-weight-light\">-- No Shows Available --</h3>\r\n    </div>\r\n</div>","import { Component } from \"@angular/core\";\r\n\r\n@Component({\r\n    selector:\"app-main\",\r\n    templateUrl:'./bookmyshow.component.html'\r\n})\r\nexport class BookMyShowComponent{\r\n    constructor() {}\r\n}","<router-outlet></router-outlet>","import { Router } from '@angular/router';\r\nimport { Component, Input, OnInit } from \"@angular/core\";\r\nimport { ShowModel } from \"src/app/models/show.model\";\r\n\r\n@Component({\r\n    selector: \"app-showcard\",\r\n    // template :\"<h1>hellp</h1>\"\r\n    templateUrl: \"./show-details-card.component.html\"\r\n})\r\nexport class ShowDetailsCardComponent implements OnInit {\r\n\r\n    @Input() showData: ShowModel;\r\n\r\n    constructor(public router: Router) { }\r\n\r\n    ngOnInit() {\r\n\r\n        if (this.showData.posterImgPath.trim() == \"\") {\r\n            this.showData.posterImgPath = \"https://cdn.shopify.com/shopifycloud/shopify/assets/no-image-2048-5e88c1b20e087fb7bbe9a3771824e743c244f437e4f8ba93bbf7b11b53f7824c.gif\"\r\n        }\r\n        console.log(this.showData);\r\n    }\r\n\r\n    showDetails(showsId: number) {\r\n        console.log(showsId);\r\n        this.router.navigate([`/details/${showsId}`])\r\n    }\r\n}","<div>\r\n    <div class=\"card\">\r\n\r\n        <img src=\"{{showData.posterImgPath}}\" class=\"card-img-top poster-img\" alt=\"...\">\r\n        <div class=\"card-body\">\r\n          <h5 class=\"card-title\">{{showData.name}}</h5>\r\n          <p class=\"card-text show-discription\">{{showData.description != null && showData.description.trim().length != 0 ? showData.description : \"--No Discription--\"}}</p>\r\n          <a (click)=\"showDetails(showData.id)\" class=\"btn btn-primary w-auto\" >View Details</a>\r\n        </div>\r\n      </div>\r\n</div>","import { NewReservationModel } from '../../models/new-reservation.model';\r\nimport { FormControl } from '@angular/forms';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { ReservationService } from '../../services/reservation.service';\r\nimport { Router } from '@angular/router';\r\nimport { AppStateService } from '../../services/appstate.service';\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { ShowModel } from 'src/app/models/show.model';\r\nimport { VenueModel } from 'src/app/models/venue.model';\r\n\r\n@Component({\r\n    selector: \"app-checkout\",\r\n    templateUrl: \"./seat-selector.component.html\"\r\n})\r\nexport class SeatSelectorComponent implements OnInit {\r\n\r\n    showDetails: ShowModel;\r\n    venueDetails: VenueModel;\r\n    reservedSeats: number[] = [];\r\n    totalSeats: number[];\r\n    availableSeatArray: number[];\r\n    selectedSeats: number[] = [];\r\n    seatRequirementForm: FormGroup;\r\n    requiredSeats: number;\r\n    selectedSeatCount: number = 0;\r\n    showTicket = false\r\n    showPrice: number = 0;\r\n\r\n    constructor(public appState: AppStateService, public router: Router, public reservationService: ReservationService) {\r\n\r\n        this.seatRequirementForm = new FormGroup({\r\n            seatRequired: new FormControl()\r\n        })\r\n    }\r\n\r\n    ngOnInit() {\r\n        if (this.appState.getLoginState() == false) {\r\n            this.router.navigate(['/login']);\r\n        }\r\n\r\n        if (this.appState.getSelectedShow() == null) {\r\n            this.router.navigate(['/']);\r\n        }\r\n\r\n\r\n        this.showDetails = this.appState.getSelectedShow();\r\n        this.venueDetails = this.appState.getSelectedVenue();\r\n        this.showPrice = Number(this.venueDetails.showPrice);\r\n        this.totalSeats = Array(Number(this.venueDetails.totalSeatCount));\r\n        this.availableSeatArray = Array(Number(this.venueDetails.availableSeatCount));\r\n\r\n        this.seatRequirementForm.get(\"seatRequired\").valueChanges.subscribe(value => {\r\n            this.requiredSeats = value;\r\n            this.selectedSeatCount = 0;\r\n            this.selectedSeats = [];\r\n        })\r\n\r\n        this.requiredSeats = 1;\r\n        this.getReservedSeats()\r\n    }\r\n\r\n    getReservedSeats() {\r\n        this.reservationService.getReservedSeats(this.venueDetails.id).subscribe(value => {\r\n            this.reservedSeats = value.map(e => { return Number(e) });\r\n            console.log(this.reservedSeats);\r\n        });\r\n    }\r\n\r\n    checkSeatReserved(seat) {\r\n        return this.reservedSeats.indexOf(seat) != -1\r\n    }\r\n\r\n    checkSeatMarked(seat) {\r\n        return this.selectedSeats.indexOf(seat) != -1\r\n    }\r\n\r\n    toggleSeat(seatNumber) {\r\n        //reserved case\r\n        if (this.reservedSeats.indexOf(seatNumber) != -1) {\r\n            return;\r\n        }\r\n\r\n        //seat is unmarked\r\n        if (this.selectedSeats.indexOf(seatNumber) == -1) {\r\n            //mark the seat \r\n            if (this.selectedSeatCount != this.requiredSeats) {\r\n                this.selectedSeats.push(seatNumber);\r\n                this.selectedSeatCount++;\r\n            }\r\n        } else {\r\n            //is already marked by user, unmark the seat\r\n            this.selectedSeats = this.selectedSeats.filter(e => e != seatNumber);\r\n            this.selectedSeatCount--;\r\n        }\r\n    }\r\n\r\n    checkout() {\r\n        let userId = this.appState.getAuthDetails().userId;\r\n\r\n        let reservationRequest = new NewReservationModel({\r\n            userId, venueId: this.venueDetails.id.toString(),\r\n            seatNumbers: this.selectedSeats\r\n        });\r\n\r\n        this.reservationService.createReservation(reservationRequest).subscribe(value => {\r\n            this.showTicket = true;\r\n        });\r\n    }\r\n}","<div class=\"container mt-3 seat-selector\">\r\n  <div class=\"ticket-container\" *ngIf=\"showTicket\">\r\n    <div class=\"show-ticket d-flex justify-content-between flex-column\">\r\n      <div>\r\n        <h2>Your reservation was created successfully!</h2>\r\n        <hr />\r\n        <span class=\"font-weight-bold seat-number\">Your seat numbers :</span\r\n        ><span *ngFor=\"let i of selectedSeats\" class=\"seat-number\"> {{ i }}</span>\r\n        <div class=\"mt-3\">\r\n          <h4>Location</h4>\r\n          <p>{{ venueDetails.address }}</p>\r\n        </div>\r\n        <div class=\"mt-3\">\r\n          <h4>Date and Time</h4>\r\n          <p>{{ venueDetails.showDateTime}}</p>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <a class=\"btn btn-primary\" href=\"/\">Back to homepage</a>\r\n        <a class=\"btn btn-success ml-2\" href=\"/user\" [routerLink]=\"['/user']\">Show my reservations</a>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"row\">\r\n    <div class=\"col-3\">\r\n      <div class=\"card\">\r\n        <img\r\n          src=\"{{ showDetails.posterImgPath }}\"\r\n          class=\"card-img-top poster-img\"\r\n          alt=\"...\"\r\n        />\r\n      </div>\r\n    </div>\r\n    <div class=\"col left-border\">\r\n      <h2>{{ showDetails.name }}</h2>\r\n      <hr />\r\n      <p>\r\n        {{ showDetails.description }}\r\n      </p>\r\n      <hr />\r\n      <div class=\"venue-discription\">\r\n        <div>\r\n          <span class=\"font-weight-bold\">Location: </span\r\n          ><span class=\"text-dark\">{{ venueDetails.address }}</span>\r\n        </div>\r\n        <div>\r\n          <span class=\"font-weight-bold\">Date and time: </span\r\n          ><span class=\"text-dark mt-2\">{{\r\n            venueDetails.showDateTime\r\n          }}</span>\r\n        </div>\r\n      </div>\r\n      <hr />\r\n\r\n      <div class=\"row mt-3\">\r\n        <div class=\"col-8\">\r\n          <h4>Choose a seat</h4>\r\n          <div class=\"seat-grid mt-3\">\r\n            <div\r\n              class=\"seat\"\r\n              *ngFor=\"let i of totalSeats; let z = index\"\r\n              [ngClass]=\"{\r\n                'seat-occupied': checkSeatReserved(z + 1),\r\n                'seat-selected': checkSeatMarked(z + 1)\r\n              }\"\r\n              (click)=\"toggleSeat(z + 1)\"\r\n            >\r\n              {{ z + 1 }}\r\n            </div>\r\n          </div>\r\n          <div class=\"seat-stats mt-4\">\r\n            <div>\r\n              <span class=\"font-weight-bold\">Availabe Seats : </span\r\n              ><span>{{ venueDetails.availableSeatCount }}</span>\r\n            </div>\r\n            <div>\r\n              <form [formGroup]=\"seatRequirementForm\">\r\n                <div class=\"form-group\">\r\n                  <label for=\"exampleFormControlSelect1\"\r\n                    >Set number of seats required</label\r\n                  >\r\n                  <select\r\n                    class=\"form-control\"\r\n                    id=\"exampleFormControlSelect1\"\r\n                    formControlName=\"seatRequired\"\r\n                  >\r\n                    <option *ngFor=\"let i of availableSeatArray; let z = index\">\r\n                      {{ z + 1 }}\r\n                    </option>\r\n                  </select>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div\r\n          class=\"col-4 mt-3 left-border d-flex flex-column justify-content-between\"\r\n        >\r\n          <div class=\"price-container text-center\">\r\n            <h3>Total Price</h3>\r\n            <h1 class=\"font-weight-bold\">\r\n              {{\r\n                selectedSeatCount * showPrice \r\n                  | currency: \"INR\":true\r\n              }}\r\n            </h1>\r\n          </div>\r\n          <div class=\"checkout-container\">\r\n            <hr />\r\n            <button\r\n              class=\"btn btn-success w-100\"\r\n              (click)=\"checkout()\"\r\n              [disabled]=\"this.selectedSeats.length == 0\"\r\n            >\r\n              Checkout\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <hr />\r\n  </div>\r\n</div>\r\n","import { VenueModel } from 'src/app/models/venue.model';\r\nimport { Observable, } from 'rxjs';\r\nimport { ShowModel } from './../models/show.model';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from \"@angular/core\";\r\nimport { AppStateService } from './appstate.service';\r\n\r\n@Injectable({\r\n    providedIn: \"root\"\r\n})\r\nexport class ShowsService {\r\n\r\n    constructor(public http: HttpClient, public appState: AppStateService) { }\r\n\r\n    getAllShows(): Observable<ShowModel[]> {\r\n        return this.http.get<ShowModel[]>(this.appState.getHttpRoot() + \"/shows/getAllShows\")\r\n    }\r\n\r\n    getShow(showId: number) {\r\n        return this.http.get<ShowModel>(this.appState.getHttpRoot() + `/shows/getshow?showId=${showId}`)\r\n    }\r\n\r\n    getVenue(venueId: number) {\r\n        return this.http.get<VenueModel>(this.appState.getHttpRoot() + `/shows/getvenue?venueId=${venueId}`);\r\n    }\r\n\r\n    createShow(show: ShowModel) {\r\n        return this.http.post<number>(this.appState.getHttpRoot() + '/shows/createshow', show);\r\n    }\r\n\r\n    createVenue(venue: VenueModel) {\r\n        return this.http.post<number>(this.appState.getHttpRoot() + '/shows/createvenue', venue);\r\n    }\r\n\r\n    getVenuesForShow(showId: number) {\r\n        return this.http.get<VenueModel[]>(this.appState.getHttpRoot() + `/shows/venuesforshow?showId=${showId}`);\r\n    }\r\n}","import { Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  encapsulation : ViewEncapsulation.None\n})\nexport class AppComponent {\n  title = 'BookMyShow';\n}\n","<app-navbar></app-navbar>\r\n<main>\r\n    <router-outlet></router-outlet>\r\n</main>","export class ShowModel {\r\n\r\n    public id: number;\r\n    public name: string;\r\n    public duration: {\r\n        hours: number,\r\n        minutes: number,\r\n        seconds: number,\r\n    };\r\n    public posterImgPath: string;\r\n    public genre: string;\r\n    public description: string;\r\n\r\n    constructor(args: {}) {\r\n        this.id = args[\"id\"];\r\n        this.name = args[\"name\"];\r\n        this.duration = args[\"duration\"]\r\n        this.posterImgPath = args[\"posterImgPath\"];\r\n        this.genre = args[\"genre\"];\r\n        this.description = args[\"description\"];\r\n    }\r\n}\r\n","import { ShowModel } from 'src/app/models/show.model';\r\nimport { VenueModel } from './../models/venue.model';\r\nimport { AuthDetails } from './../models/authdetails.model';\r\nimport { Injectable } from \"@angular/core\";\r\nimport { isDevMode } from '@angular/core';\r\nimport { BehaviorSubject } from \"rxjs\";\r\nimport { SocialAuthService } from 'angularx-social-login';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class AppStateService {\r\n\r\n    private loginState: BehaviorSubject<boolean>;\r\n    private loginRole: string;\r\n    private authDetails: BehaviorSubject<AuthDetails>;\r\n    private selectedShow: BehaviorSubject<ShowModel>;\r\n    private selectedVenue: BehaviorSubject<VenueModel>;\r\n\r\n    constructor(public socialAuthService: SocialAuthService) {\r\n\r\n        if (localStorage.getItem(\"accessToken\") != null) {\r\n            let logins = new AuthDetails({ userId: localStorage.getItem(\"userId\"), accessToken: localStorage.getItem(\"accessToken\"), userName: localStorage.getItem(\"userName\"), userRole: sessionStorage.getItem(\"userRole\") });\r\n            this.loginState = new BehaviorSubject<boolean>(true);\r\n            this.authDetails = new BehaviorSubject<AuthDetails>(logins);\r\n            // this.loginRole = sessionStorage.getItem(\"userRole\");\r\n        } else {\r\n            this.loginState = new BehaviorSubject<boolean>(false);\r\n            this.authDetails = new BehaviorSubject<AuthDetails>(null);\r\n        }\r\n\r\n        this.selectedShow = new BehaviorSubject<ShowModel>(null);\r\n        this.selectedVenue = new BehaviorSubject<VenueModel>(null);\r\n    }\r\n\r\n    getHttpRoot() {\r\n        if (isDevMode()) {\r\n            return \"https://localhost:5001\"\r\n        } else {\r\n            return \"\";\r\n        }\r\n    }\r\n\r\n    getLoginState() {\r\n        return this.loginState.getValue();\r\n    }\r\n\r\n    getLoginStateObservable() {\r\n        return this.loginState;\r\n    }\r\n\r\n    getGetLoginRole() {\r\n        return this.loginRole;\r\n    }\r\n\r\n    setLoginState(loginData: AuthDetails, role: string) {\r\n        this.loginRole = role;\r\n        this.loginState.next(true);\r\n        this.authDetails.next(loginData);\r\n        localStorage.setItem(\"userName\", loginData.userName);\r\n        localStorage.setItem(\"accessToken\", loginData.accessToken);\r\n        localStorage.setItem(\"userId\", loginData.userId);\r\n        sessionStorage.setItem(\"userRole\", loginData.userRole);\r\n    }\r\n\r\n    getAuthDetails() {\r\n        return this.authDetails.getValue();\r\n    }\r\n\r\n    getAuthToken() {\r\n        return this.authDetails.getValue().accessToken;\r\n    }\r\n\r\n    logout() {\r\n        this.loginRole = null;\r\n        this.loginState.next(false);\r\n        this.authDetails.next(null);\r\n        localStorage.clear();\r\n        this.socialAuthService.signOut();\r\n    }\r\n\r\n    setShowAndVenue(show: ShowModel, venue: VenueModel) {\r\n        this.selectedShow.next(show);\r\n        this.selectedVenue.next(venue);\r\n    }\r\n\r\n    getSelectedShow() {\r\n        return this.selectedShow.value;\r\n    }\r\n    getSelectedVenue() {\r\n        return this.selectedVenue.value;\r\n    }\r\n}","import { Component } from \"@angular/core\";\r\n\r\n@Component({\r\n    selector:\"app-admin\",\r\n    templateUrl:\"./admin.component.html\"\r\n})\r\nexport class AdminComponent{\r\n  constructor() {}  \r\n}","<router-outlet></router-outlet>","import { BookMyShowAuthGuard } from '../bookmyshow/bookmyshow.authguard';\r\nimport { UserComponent } from './user.component';\r\nimport { UserDashboardComponent } from './dashboard/user-dashboard.component';\r\nimport { NgModule } from \"@angular/core\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\n\r\nconst routes: Routes = [{\r\n    path: \"\",\r\n    component: UserComponent,\r\n    canActivate: [BookMyShowAuthGuard],\r\n    children: [\r\n        {\r\n            path: \"\",\r\n            component: UserDashboardComponent\r\n        }\r\n    ]\r\n}]\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class UserRoutingModule {\r\n\r\n}","import { BookMyShowModule } from './bookmyshow/bookmyshow.module';\nimport { AdminModule } from './admin/admin.module';\nimport { UserModule } from './user/user.module';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, isDevMode } from '@angular/core';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { AuthInterceptor } from './services/auth-interceptor.service';\nimport { SharedModule } from './shared.module';\nimport { SocialLoginModule } from 'angularx-social-login';\nimport { GoogleLoginProvider, FacebookLoginProvider } from 'angularx-social-login';\n\nconst fbLoginOptions = {\n  scope: 'email',\n  return_scopes: true,\n  enable_profile_selector: true,\n  version: \"v2.11\"\n};\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    UserModule,\n    AdminModule,\n    BookMyShowModule,\n    SharedModule.forRoot(),\n    SocialLoginModule\n  ],\n  providers: [{\n    provide: HTTP_INTERCEPTORS,\n    useClass: AuthInterceptor,\n    multi: true\n  },\n  {\n    provide: 'SocialAuthServiceConfig',\n    useValue: {\n      autoLogin: false,\n      providers: [{\n        id: GoogleLoginProvider.PROVIDER_ID,\n        provider: new GoogleLoginProvider(\n          \"578676376086-grfj331sbobl9v0mvs6jlj7o0vvkadiu.apps.googleusercontent.com\"\n        )\n      }\n      ,\n      {\n        id: FacebookLoginProvider.PROVIDER_ID,\n        provider: new FacebookLoginProvider(\n          \"232050841742979\",fbLoginOptions\n        )\n      }\n      ]\n    }\n  }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { AdminCreateShowComponent } from './admin-create-show/admin-create-show.component';\r\nimport { AdminShowDetailsComponent } from './admin-show-details/admin-details.component';\r\nimport { AdminDashboardComponent } from './admin-dashboard/admin-dashboard.component';\r\nimport { CanActivate } from '@angular/router';\r\nimport { Routes } from '@angular/router';\r\nimport { RouterModule } from '@angular/router';\r\nimport { NgModule } from \"@angular/core\";\r\nimport { AdminComponent } from './admin.component';\r\nimport { AdminAuthGuard } from './admin.authguard';\r\n\r\nlet routes: Routes = [\r\n    {\r\n        path: \"\",\r\n        component: AdminComponent,\r\n        canActivate: [AdminAuthGuard],\r\n        children: [\r\n            {\r\n                path: \"\",\r\n                component: AdminDashboardComponent\r\n            }, \r\n            {\r\n                path: \"details/:id\",\r\n                component: AdminShowDetailsComponent\r\n            }, \r\n            {\r\n                path: \"create\",\r\n                component: AdminCreateShowComponent\r\n            }\r\n        ]\r\n    }\r\n]\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class AdminRoutingMoudle {}","import { AppStateService } from './services/appstate.service';\r\nimport { ModuleWithProviders, NgModule } from \"@angular/core\";\r\n\r\n///To inject the AppState into lazy loaded modules\r\n\r\n@NgModule({\r\n\r\n})\r\nexport class SharedModule {\r\n    \r\n    static forRoot(): ModuleWithProviders<SharedModule> {\r\n        return {\r\n            ngModule: SharedModule,\r\n            providers: [AppStateService]\r\n        }\r\n    }\r\n}","import { AppStateService } from './appstate.service';\r\nimport { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from \"@angular/common/http\";\r\nimport { Inject, Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs\";\r\nimport { nextTick } from 'process';\r\n\r\n@Injectable({\r\n    providedIn: \"root\"\r\n})\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n\r\n    constructor(public appState: AppStateService) { }\r\n\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n\r\n        if (this.appState.getLoginState() == true) {\r\n            const authReq = req.clone({\r\n                headers: req.headers.set('Authorization', `Bearer ${this.appState.getAuthToken()}`)\r\n            });\r\n            return next.handle(authReq);\r\n        } else {\r\n            return next.handle(req);\r\n        }\r\n    }\r\n\r\n\r\n}","import { ShowDetailsComponent } from './showdetails/showdetails.component';\nimport { RegisterComponent } from './register/register.component';\nimport { BookMyShowAuthGuard } from './bookmyshow.authguard';\nimport { LoginComponent } from './login/login.component';\nimport { ShowDetailsCardComponent } from './show-details-card/show-details-card.component';\nimport { MainRouting } from './bookmyshow.routing';\nimport { BookMyShowComponent } from './bookmyshow.component';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HomepageComponent } from './homepage/homepage.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { SeatSelectorComponent } from './seat-selector/seat-selector.component';\nimport { SharedModule } from '../shared.module';\n\n@NgModule({\n  declarations: [\n    HomepageComponent,\n    BookMyShowComponent,\n    ShowDetailsCardComponent,\n    LoginComponent,\n    RegisterComponent,\n    ShowDetailsComponent,\n    SeatSelectorComponent\n  ],\n  imports: [\n    CommonModule,\n    MainRouting,\n    ReactiveFormsModule,\n    SharedModule\n  ],\n  exports: [\n    HomepageComponent,\n    BookMyShowComponent,\n    ShowDetailsCardComponent,\n    LoginComponent,\n    RegisterComponent,\n    ShowDetailsComponent,\n    SeatSelectorComponent\n  ],\n  providers: [BookMyShowAuthGuard]\n})\nexport class BookMyShowModule { }\n","import { AdminCreateShowComponent } from './admin-create-show/admin-create-show.component';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { AdminDashboardComponent } from './admin-dashboard/admin-dashboard.component';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgModule } from \"@angular/core\";\r\nimport { AdminAuthGuard } from './admin.authguard';\r\nimport { AdminRoutingMoudle } from './admin.routing';\r\nimport { AdminComponent } from './admin.component';\r\nimport { SharedModule } from '../shared.module';\r\nimport { AdminShowDetailsComponent } from './admin-show-details/admin-details.component';\r\n\r\n@NgModule({\r\n    providers:[],\r\n    declarations:[AdminDashboardComponent,AdminComponent, AdminShowDetailsComponent,AdminCreateShowComponent],\r\n    exports:[AdminDashboardComponent,AdminComponent, AdminShowDetailsComponent,AdminCreateShowComponent],\r\n    imports:[CommonModule,AdminRoutingMoudle,SharedModule,ReactiveFormsModule]\r\n})\r\nexport class AdminModule{\r\n\r\n}","\nimport { ActivatedRoute, ActivatedRouteSnapshot } from '@angular/router';\nimport { AppStateService } from './../services/appstate.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n})\nexport class NavbarComponent implements OnInit {\n\n  showLoginAndRegister:Boolean\n  \n  constructor(public appstate:AppStateService,public router:ActivatedRoute) { \n    this.showLoginAndRegister = true;\n  }\n\n  ngOnInit(): void {\n    this.appstate.getLoginStateObservable().subscribe(value=>{\n        this.showLoginAndRegister=!value;\n    })\n  }\n  \n  logout(){\n    this.appstate.logout();\n  }\n\n}\n","<nav class=\"navbar navbar-light bg-light navbar-expand-lg\">\n  <a class=\"navbar-brand\" href=\"/\" [routerLink]=\"['/']\">BookMyShow</a>\n  <div class=\"navbar-nav ml-auto\">\n    <a\n      class=\"nav-link\"\n      href=\"/login\"\n      [routerLink]=\"['/login']\"\n      *ngIf=\"appstate.getLoginState() == false\"\n      >Login</a\n    >\n    <a\n      class=\"nav-link\"\n      href=\"/register\"\n      [routerLink]=\"['/register']\"\n      *ngIf=\"appstate.getLoginState() == false\"\n      >Register</a\n    >\n    <a\n      href=\"/user\"\n      class=\"nav-link text-success\"\n      [routerLink]=\"['/user']\"\n      *ngIf=\"appstate.getLoginState()\"\n      >Hello! {{ appstate.getAuthDetails().userName }}</a\n    >\n    <a\n      href=\"/admin\"\n      class=\"nav-link text-dark\"\n      [routerLink]=\"['/admin']\"\n      *ngIf=\"\n        appstate.getLoginState() &&\n        appstate.getAuthDetails().userRole == 'Admin'\n      \"\n      >Admin Dashboard</a\n    >\n    <a\n      href=\"#\"\n      class=\"nav-link text-danger\"\n      *ngIf=\"appstate.getLoginState() == true\"\n      (click)=\"logout()\"\n      >Logout</a\n    >\n  </div>\n</nav>\n","export class RegisterUserModel {\r\n  \r\n  public userName: string;\r\n  public password: string;\r\n  public email: string;\r\n\r\n  constructor(args: {}) {\r\n    this.userName = args[\"userName\"];\r\n    this.password = args[\"password\"];\r\n    this.email = args[\"email\"];\r\n  }\r\n}","import { SocialLoginModel } from './../models/social-login.model';\r\nimport { Observable } from 'rxjs';\r\nimport { RegisterUserModel } from '../models/register-user.model';\r\nimport { AuthDetails } from './../models/authdetails.model';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { AppStateService } from './appstate.service';\r\nimport { Injectable } from \"@angular/core\";\r\nimport { LoginModel } from '../models/login.model';\r\n\r\n@Injectable({\r\n    providedIn: \"root\"\r\n})\r\nexport class AuthService {\r\n\r\n    constructor(public appstate: AppStateService, public http: HttpClient) { }\r\n\r\n    attemptLogin(email: string, password: string): Observable<AuthDetails> {\r\n        return this.http.post<AuthDetails>(this.appstate.getHttpRoot() + \"/auth/login\", new LoginModel({ email, password }))\r\n    }\r\n\r\n    registerUser(userName: string, email: string, password: string): Observable<AuthDetails> {\r\n        return this.http.post<AuthDetails>(this.appstate.getHttpRoot() + \"/auth/register\", new RegisterUserModel({ userName, email, password }));\r\n    }\r\n\r\n    validateGoogleAuth(socialLogin: SocialLoginModel) {\r\n        return this.http.post<AuthDetails>(this.appstate.getHttpRoot() + '/auth/google',socialLogin);\r\n    }\r\n}","export class NewReservationModel {\r\n\r\n    public userId: string\r\n    public venueId: string;\r\n    public seatNumbers: number[];\r\n\r\n    constructor(args: {}) {\r\n        this.userId = args[\"userId\"];\r\n        this.venueId = args[\"venueId\"];\r\n        this.seatNumbers = args[\"seatNumbers\"];\r\n    }\r\n}","import { Observable } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from \"@angular/core\";\r\nimport { UserReservationModel } from '../models/user-reservation.model';\r\nimport { NewReservationModel } from '../models/new-reservation.model';\r\nimport { AppStateService } from './appstate.service';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n    providedIn: \"root\"\r\n})\r\nexport class ReservationService {\r\n\r\n    constructor(public http: HttpClient, public appState: AppStateService) { }\r\n\r\n    getReservedSeats(venueId: string) {\r\n        return this.http.get<number[]>(this.appState.getHttpRoot() + `/reservations/reservedseats?venueId=${venueId}`)\r\n    }\r\n\r\n    createReservation(reservation: NewReservationModel) {\r\n        return this.http.post(this.appState.getHttpRoot() + \"/reservations/reserve\", reservation)\r\n    }\r\n\r\n    getUserReservations() {\r\n        return this.http.post<UserReservationModel[]>(this.appState.getHttpRoot() + `/reservations`, { id: this.appState.getAuthDetails().userId })\r\n    }\r\n\r\n    cancelReservation(reservationsId) {\r\n        return this.http.post(this.appState.getHttpRoot() + \"/reservations/cancel\", { id: reservationsId.toString() })\r\n\r\n    }\r\n}","import { AppStateService } from '../services/appstate.service';\r\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from \"@angular/router\";\r\nimport { Observable } from 'rxjs';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n    providedIn: \"root\"\r\n})\r\nexport class BookMyShowAuthGuard implements CanActivate {\r\n\r\n    constructor(private appState: AppStateService, private router: Router) { }\r\n\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean | UrlTree | Observable<boolean | UrlTree> | Promise<boolean | UrlTree> {\r\n        console.log(this.appState.getAuthDetails());\r\n        if (this.appState.getLoginState()) {\r\n            return true;\r\n        } else {\r\n            return this.router.navigate([\"login\"]);\r\n        }\r\n    }\r\n}","export class AuthDetails {\r\n\r\n    public accessToken: string;\r\n    public userId: string;\r\n    public userName: string;\r\n    public userRole: string;\r\n\r\n    constructor(args: {}) {\r\n        this.accessToken = args[\"accessToken\"];\r\n        this.userId = args[\"userId\"];\r\n        this.userName = args[\"userName\"];\r\n        this.userRole = args[\"userRole\"]\r\n    }\r\n}","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    loadChildren: () => import(\"./bookmyshow/bookmyshow.module\").then(m => m.BookMyShowModule)\n  }, {\n    path: \"user\",\n    loadChildren: () => import(\"../app/user/user.module\").then(m => m.UserModule),\n  },\n  {\n    path: \"admin\",\n    loadChildren: () => import(\"../app/admin/admin.module\").then(m => m.AdminModule),\n  },\n  {\n    path: \"*\",\n    redirectTo: \"\"\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { useHash: true })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { forkJoin } from 'rxjs';\r\nimport { VenueModel } from 'src/app/models/venue.model';\r\nimport { ShowModel } from 'src/app/models/show.model';\r\nimport { ShowsService } from './../../services/shows.service';\r\nimport { FormGroup, FormArray, Validators, FormControl } from '@angular/forms';\r\n\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n    selector: \"app-admin-create\",\r\n    templateUrl: \"./admin-create-show.component.html\",\r\n})\r\nexport class AdminCreateShowComponent implements OnInit {\r\n\r\n    newShowForm: FormGroup\r\n\r\n    constructor(public showService: ShowsService, public router: Router) {\r\n        \r\n        this.newShowForm = new FormGroup({\r\n            name: new FormControl(\"\", [Validators.required]),\r\n            description: new FormControl(\"\", [Validators.required]),\r\n            posterImgPath: new FormControl(\"\", [Validators.required]),\r\n            duration: new FormControl(\"\", [Validators.required]),\r\n            genre: new FormControl(\"\", [Validators.required]),\r\n            showVenues: new FormArray([])\r\n        })\r\n    }\r\n\r\n    ngOnInit() { }\r\n\r\n    get showVenues() {\r\n        return this.newShowForm.get(\"showVenues\") as FormArray;\r\n    }\r\n\r\n    createNewLocationForm() {\r\n        this.showVenues.push(new FormGroup({\r\n            address: new FormControl(\"\", [Validators.required]),\r\n            showPrice: new FormControl(\"\", [Validators.required, Validators.pattern(\"^[0-9]*$\")]),\r\n            showDateTime: new FormControl(\"\", [Validators.required]),\r\n            totalSeatCount: new FormControl(\"\", [Validators.required, Validators.pattern(\"^[0-9]*$\")])\r\n        }))\r\n    }\r\n\r\n    submitHandler() {\r\n        let { name, description, duration, genre, posterImgPath, showVenues} = this.newShowForm.value;\r\n        duration += \":00\";\r\n\r\n        let show = new ShowModel({ name, description, duration, posterImgPath, genre });\r\n        console.log(show);\r\n\r\n        this.showService.createShow(show).subscribe(showId => {\r\n\r\n            let venueRequests = (showVenues as VenueModel[]).map(venue => {\r\n                venue.showId = showId.toString();\r\n                return this.showService.createVenue(venue);\r\n            })\r\n\r\n            forkJoin(venueRequests).subscribe(result => {\r\n                console.log(result);\r\n                this.router.navigate(['/admin']);\r\n            }, error => console.error(error));\r\n        })\r\n    }\r\n}","<div class=\"container mt-3\">\r\n    <h1>Create Show</h1>\r\n    <hr>\r\n    <form [formGroup] = \"newShowForm\">\r\n        <div class=\"form-group\">\r\n            <label for=\"\">Show Name</label>\r\n            <input type=\"text\" class=\"form-control\" formControlName=\"name\">\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label for=\"\">Description</label>\r\n            <textarea name=\"\" id=\"\" cols=\"30\" rows=\"3\" class=\"form-control\" formControlName=\"description\"></textarea>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label for=\"\">Poster link</label>\r\n            <input type=\"text\" name=\"\" id=\"\" class=\"form-control\" formControlName=\"posterImgPath\">\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label for=\"\">Show Genre</label>\r\n            <input type=\"text\" name=\"\" id=\"\" class=\"form-control\" formControlName=\"genre\">\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label for=\"\">Show duration</label>\r\n            <input type=\"time\" name=\"\" id=\"\" class=\"form-control\" formControlName=\"duration\">\r\n        </div>\r\n        <hr>\r\n        <h2>Add Locations</h2>\r\n        <div formArrayName=\"showVenues\">\r\n      \r\n            <div *ngFor=\"let i of showVenues.controls;let k = index\">\r\n                <hr>\r\n                <div [formGroupName]=\"k\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"\">Venue Address</label>    \r\n                        <textarea name=\"\" id=\"\" cols=\"30\" rows=\"3\" class=\"form-control\" formControlName=\"address\"></textarea>\r\n                   </div>\r\n                   <div class=\"form-group\">\r\n                       <label for=\"\">Show price</label>\r\n                       <input type=\"text\" name=\"\" id=\"\" class=\"form-control\" formControlName=\"showPrice\">\r\n                   </div>\r\n                   <div class=\"form-group\">\r\n                       <label for=\"\">Show date and time</label>\r\n                       <input type=\"datetime-local\" name=\"\" id=\"\" class=\"form-control\" formControlName=\"showDateTime\">\r\n                   </div>\r\n                   <div class=\"form-group\">\r\n                       <label for=\"\">Total seating</label>\r\n                    <input type=\"text\" name=\"\" id=\"\" class=\"form-control\" formControlName=\"totalSeatCount\">\r\n                   </div>\r\n                </div>\r\n              \r\n\r\n            </div>\r\n        </div>\r\n        <button class=\"btn btn-primary\" (click)=\"createNewLocationForm()\">Add location form</button>\r\n        <hr>\r\n\r\n        <input type=\"submit\" value=\"Create show\" class=\"btn btn-success mt-2\" [disabled]=\"this.newShowForm.invalid || this.showVenues.length == 0\" (click)=\"submitHandler()\">\r\n    </form>\r\n</div>","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}